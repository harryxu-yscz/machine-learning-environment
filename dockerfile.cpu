FROM ubuntu:16.04
ARG PYTHON_VERSION=3.5
ARG NB_USER=ubuntu 
ENV OPENCV_DIR /opt/opencv 
ENV CAFFE_ROOT /opt/caffe
ENV NUM_CORES 8 
ENV NB_UID 1000 
ARG CLONE_TAG=1.0
ENV PYCAFFE_ROOT $CAFFE_ROOT/python
ENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH
ENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH

LABEL maintainer "Pierre-Luc Delisle <pierre-luc.delisle.1@ens.etsmtl.ca>"

RUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER

RUN apt-get update && apt-get install -y --no-install-recommends \
            ca-certificates \
            build-essential \
            apt-utils \ 
            cmake \
            git \
            libgtk2.0-dev \ 
            pkg-config \
            libavcodec-dev \
            libavformat-dev \
            libswscale-dev \
            wget \
            libhdf5-dev \
            g++ \
            graphviz \
            vim \
            nano \
            unzip \
            libtbb2 \
            libtbb-dev \
            libjpeg-dev \
            libpng-dev \
            libtiff-dev \
            libjasper-dev \
            libdc1394-22-dev \ 
            libv4l-dev \
            libgtk-3-dev \
            libatlas-base-dev \ 
            gfortran \
            openblas-* \
            libeigen3-dev \  
            ocl-icd-opencl-dev \ 
            python3-dev \
            python3-tk \
            python3-numpy \
            python3-scipy \
            python3-nose \
            python3-h5py \
            python3-skimage \
            python3-matplotlib \
            python3-pandas \
            python3-sklearn \
            python3-sympy \
            libcupti-dev \
            libgtkglext1* \
            freeglut3* \
            libgl1-mesa-dev \
            mesa-common-dev \
            libprotobuf-dev \
            libleveldb-dev \
            libsnappy-dev \
            libopencv-dev \ 
            libhdf5-serial-dev \
            protobuf-compiler \
            libboost-* \
            libatlas-base-dev \
            libopenblas-dev \ 
            openblas* \
            libgstreamer* \
            libfaac-dev \
            libopencore-amrnb-dev \ 
            libopencore-amrwb-dev \ 
            libtheora-dev \
            libvorbis-dev \
            libxvidcore-dev \
            x264 \
            v4l-utils \
            liblapacke-dev \
            doxygen \
            libopenni2* \
            libgphoto2* \
            libgflags-dev \
            libgoogle-glog-dev \
            python-dev \
            python-numpy \
            python-pip \
            python-setuptools \
            python-scipy \
            liblmdb-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* 

RUN wget https://bootstrap.pypa.io/get-pip.py && \ 
    python3 get-pip.py && \ 
    pip3 install numpy \
                 virtualenv \
                 virtualenvwrapper \
                 boost \
                 pytest && \
    pip install numpy \ 
                virtualenv \
                virtualenvwrapper \
                boost \
                pytest

RUN mkdir -p /src && \
    mkdir -p $CAFFE_ROOT && \
    cd $CAFFE_ROOT && \
    git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . && \
    pip install --upgrade pip && \
    cd python && \
    for req in $(cat requirements.txt) pydot; do pip install $req; done && \
    cd .. && \
    mkdir build && cd build && \
    cmake \
        -D USE_CUDNN=0 \
        -D USE_NCCL=0 \
        -D BLAS=open \
        -D USE_OPENCV=ON .. && \
    make -j"$(nproc)" all && \
    make pycaffe && \
    make test && \ 
    make install && \
    echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig && \
    rm -rf $CAFFE_ROOT

RUN cd /src && \
    mkdir -p $OPENCV_DIR && \
    wget https://github.com/opencv/opencv/archive/3.3.0.zip && \
    unzip 3.3.0.zip && \ 
    mv /src/opencv-3.3.0/ $OPENCV_DIR/ && \ 
    rm -rf /src/3.3.0.zip && \
    wget https://github.com/opencv/opencv_contrib/archive/3.3.0.zip -O 3.3.0-contrib.zip && \
    unzip 3.3.0-contrib.zip && \
    mv /src/opencv_contrib-3.3.0 $OPENCV_DIR/ && \ 
    rm -rf /src/3.3.0-contrib.zip && \ 
    mkdir -p $OPENCV_DIR/opencv-3.3.0/build && \
    cd $OPENCV_DIR/opencv-3.3.0/build && \ 
    cmake \
    -D CMAKE_BUILD_TYPE=RELEASE \
    -D BUILD_PYTHON_SUPPORT=ON \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_C_EXAMPLES=ON \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D BUILD_PYTHON_SUPPORT=ON \
    -D BUILD_NEW_PYTHON_SUPPORT=ON \
    -D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \
    -D PYTHON_INCLUDE_DIR=/usr/include/python3.5 \
    -D PYTHON_INCLUDE_DIR2=/usr/include/x86_64-linux-gnu/python3.5m \
    -D PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so \
    -D PYTHON3_NUMPY_INCLUDE_DIRS=/usr/local/lib/python3.5/dist-packages/numpy/core/include/ \
    -D OPENCV_EXTRA_MODULES_PATH=$OPENCV_DIR/opencv_contrib-3.3.0/modules \
    -D WITH_TBB=ON \
    -D WITH_PTHREADS_PF=ON \
    -D WITH_OPENNI=OFF \
    -D WITH_OPENNI2=ON \
    -D WITH_EIGEN=ON \
    -D BUILD_DOCS=ON \
    -D BUILD_TESTS=ON \
    -D BUILD_PERF_TESTS=ON \
    -D BUILD_EXAMPLES=ON \
    -D WITH_OPENCL=ON \
    -D WITH_CUDA=OFF \
    -D WITH_CUBLAS=OFF \
    -D USE_GStreamer=ON \
    -D WITH_GDAL=ON \
    -D WITH_CSTRIPES=ON \
    -D WITH_NVCUVID=OFF \
    -D ENABLE_FAST_MATH=1 \
    -D CUDA_FAST_MATH=OFF \
    -D BUILD_opencv_gpu=OFF \
    -D BUILD_opencv_gpuarithm=OFF \
    -D BUILD_opencv_gpubgsegm=OFF \
    -D BUILD_opencv_gpucodec=OFF \
    -D BUILD_opencv_gpufeatures2d=OFF \
    -D BUILD_opencv_gpufilters=OFF \
    -D BUILD_opencv_gpuimgproc=OFF \
    -D BUILD_opencv_gpulegacy=OFF \
    -D BUILD_opencv_gpuoptflow=OFF \
    -D BUILD_opencv_gpustereo=OFF \
    -D BUILD_opencv_gpuwarping=OFF \
    -D WITH_OPENGL=ON \
    -D WITH_QT=OFF \
    -D WITH_IPP=ON \
    -D WITH_V4L=ON .. && \
    make -j8 && \
    make install && \
    ldconfig && \
    rm -rf $OPENCV_DIR

RUN cd /home/ubuntu && \
    pip3 install virtualenv && \
    virtualenv -p python3 ml_venv && \
    . ml_venv/bin/activate && \
    ln -s /usr/local/lib/python3.5/dist-packages/cv2.cpython-35m-x86_64-linux-gnu.so /home/ubuntu/ml_venv/lib/python3.5/site-packages/ && \
    pip3 install --upgrade --force-reinstall numpy \
                 protobuf \
                 Pillow \
                 future \
                 graphviz \
                 joblib \
                 matplotlib \
                 theano \
                 cython \
                 scikit-learn \
                 scikit-image \
                 scipy \
                 tensorflow \
                 tensorflow-tensorboard==0.1.8 \
                 tflearn \
                 keras \
                 jupyter \
                 sphinx \
                 wheel \
                 boost \
                 pytest \
                 http://download.pytorch.org/whl/cu80/torch-0.2.0.post3-cp35-cp35m-manylinux1_x86_64.whl && \
    pip3 install torchvision

USER $NB_USER

EXPOSE 6006 

WORKDIR /

CMD ["/bin/bash"]
